<?php
/**
 * @file
 * Contains core functions for the Deep Zoom module.
 */

/**
 * Include additional files.
 */
foreach (module_list() as $module) {
  if (file_exists($file = dirname(__FILE__) . "/includes/{$module}.inc")) {
    require_once $file;
  }
}

/**
 * Implements hook_permission().
 */
function deepzoom_permission() {
  return array(
    'generate deepzoom files' => array(
      'title' => t('Generate deepzoom files'),
      'description' => t('Generate deepzoom files.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function deepzoom_theme() {
  $items = array();

  $items['deepzoom'] = array(
    'variables' => array(
      'images' => array(),
      'image_style' => 'large',
      'processor' => 'batch',
    ),
  );

  $items['deepzoom_dzi'] = array(
    'variables' => array(
      'size' => NULL,
      'overlap' => NULL,
      'format' => NULL,
      'width' => NULL,
      'height' => NULL,
    ),
    'template' => 'deepzoom',
  );

  return $items;
}

/**
 * Implements hook_page_alter().
 */
function deepzoom_page_alter($variables) {
  drupal_add_css(drupal_get_path('module', 'deepzoom') . '/deepzoom.css');
  drupal_add_js(drupal_get_path('module', 'deepzoom') . '/deepzoom.js');
  drupal_add_js(libraries_get_path('seadragon') . '/seadragon-min.js');
  drupal_add_js('Seadragon.Config.imagePath = "' . base_path() . libraries_get_path('seadragon') . '/img/";', 'inline');
  drupal_add_js(array('deepzoom' => file_create_url('public://deepzoom')), 'setting');
}

/**
 * Deep Zoom generator callback.
 */
function deepzoom_generate_deepzoom($images, $method = 'batch') {
  $info = module_invoke_all('deepzoom_processor_info');
  if (isset($info[$method]) && function_exists($function = $info[$method]['process callback'])) {
    return $function($images);
  }
  return FALSE;
}

/**
 * Deep Zoom generate image info callback.
 */
function deepzoom_generate_image_info($uri, $md5) {
  $config = variable_get('deepzoom_config', array(
    'tile_size' => 254,
    'tile_overlap' => 1,
  ));
  extract($config);

  $image = image_load($uri);
  $info = array(
    'md5' => $md5,
    'width' => $image->info['width'],
    'height' => $image->info['height'],
    'extension' => $image->info['extension'],
    'max_dimension' => max(array($image->info['width'], $image->info['height'])),
    'levels' => array(),
    'count' => 0,
  );
  $info['num_levels'] = (int) ceil(log($info['max_dimension'], 2));

  foreach (range(9, $info['num_levels']) as $level) {
    $info['levels'][$level] = array();
    $info['levels'][$level]['scale'] = pow(0.5, $info['num_levels'] - $level);
    $info['levels'][$level]['width'] = (int) ceil($info['width'] * $info['levels'][$level]['scale']);
    $info['levels'][$level]['height'] = (int) ceil($image->info['height'] * $info['levels'][$level]['scale']);
    $info['levels'][$level]['columns'] = (int) ceil(floatval($info['levels'][$level]['width']) / $tile_size);
    $info['levels'][$level]['rows'] = (int) ceil(floatval($info['levels'][$level]['height']) / $tile_size);
    $info['levels'][$level]['count'] = $info['levels'][$level]['columns'] * $info['levels'][$level]['rows'];

    $info['count'] += $info['levels'][$level]['columns'] * $info['levels'][$level]['rows'];
  }

  return $info;
}

/**
 * Theme function; Deep Zoom.
 */
function theme_deepzoom($variables) {
  $element = array();

  $images = is_array($variables['images']) ? $variables['images'] : array(md5_file($variables['images']) => $variables['images']);
  $status = deepzoom_generate_deepzoom($images, $variables['processor']);

  foreach ($images as $md5 => $uri) {
    if ($status[$uri]) {
      $element[] = array(
        '#markup' => "<div id='deepzoom-{$md5}' class='deepzoom'></div>",
      );
    }

    // Fallback image.
    else {
      $element[] = array(
        '#theme' => 'image_style',
        '#path' => str_replace(DRUPAL_ROOT, '', $uri),
        '#style_name' => $variables['image_style'],
      );
    }
  }

  // Nothing to return;
  if (!isset($element[0])) {
    return FALSE;
  }

  return $element;
}
